/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/filtrarPropiedades.js":
/*!**************************************!*\
  !*** ./src/js/filtrarPropiedades.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Esperar a que la página cargue\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const selectEstado = document.getElementById('estado_select')\r\n    const selectCategoria = document.getElementById('categoria_select')\r\n    const selectHabitaciones = document.getElementById('habitaciones_select')\r\n    const selectWc = document.getElementById('wc_select')\r\n    const selectEstacionamiento = document.getElementById('estacionamiento_select')\r\n    const buscarInput = document.getElementById('buscar_input')\r\n    const limpiarFiltros = document.getElementById('limpiar_filtros')\r\n    const contenedor = document.getElementById('lista_propiedades')\r\n    const contadorPropiedades = document.getElementById('contador_propiedades')\r\n    \r\n    // Elementos para mostrar/ocultar filtros\r\n    const toggleFiltrosBtn = document.getElementById('toggleFiltros')\r\n    const filtrosContainer = document.getElementById('filtrosContainer')\r\n    const cerrarFiltrosBtn = document.getElementById('cerrarFiltros')\r\n    const toggleIcon = toggleFiltrosBtn?.querySelector('.fa-chevron-down')\r\n\r\n    // Función para mostrar filtros\r\n    function mostrarFiltros() {\r\n        if (filtrosContainer) {\r\n            filtrosContainer.classList.remove('hidden')\r\n            filtrosContainer.style.display = 'block'\r\n            \r\n            // Animación suave\r\n            setTimeout(() => {\r\n                filtrosContainer.style.opacity = '1'\r\n                filtrosContainer.style.transform = 'translateY(0)'\r\n            }, 10)\r\n        }\r\n        \r\n        if (toggleFiltrosBtn) {\r\n            const span = toggleFiltrosBtn.querySelector('span')\r\n            if (span) span.textContent = 'Ocultar Filtros'\r\n        }\r\n        \r\n        if (toggleIcon) {\r\n            toggleIcon.style.transform = 'rotate(180deg)'\r\n        }\r\n    }\r\n\r\n    // Función para ocultar filtros\r\n    function ocultarFiltros() {\r\n        if (filtrosContainer) {\r\n            filtrosContainer.style.opacity = '0'\r\n            filtrosContainer.style.transform = 'translateY(-10px)'\r\n            \r\n            setTimeout(() => {\r\n                filtrosContainer.classList.add('hidden')\r\n                filtrosContainer.style.display = 'none'\r\n            }, 200)\r\n        }\r\n        \r\n        if (toggleFiltrosBtn) {\r\n            const span = toggleFiltrosBtn.querySelector('span')\r\n            if (span) span.textContent = 'Mostrar Filtros'\r\n        }\r\n        \r\n        if (toggleIcon) {\r\n            toggleIcon.style.transform = 'rotate(0deg)'\r\n        }\r\n    }\r\n\r\n    // Event listeners para mostrar/ocultar filtros\r\n    if (toggleFiltrosBtn) {\r\n        toggleFiltrosBtn.addEventListener('click', () => {\r\n            if (filtrosContainer.classList.contains('hidden')) {\r\n                mostrarFiltros()\r\n            } else {\r\n                ocultarFiltros()\r\n            }\r\n        })\r\n    }\r\n\r\n    if (cerrarFiltrosBtn) {\r\n        cerrarFiltrosBtn.addEventListener('click', ocultarFiltros)\r\n    }\r\n\r\n    // Función para crear el HTML de una propiedad\r\n    function crearPropiedadHTML(propiedad) {\r\n        const estado = propiedad.publicado ? 'Publicado' : 'No Publicado';\r\n        const colorEstado = propiedad.publicado ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800';\r\n\r\n        return `\r\n            <li class=\"bg-white rounded-xl shadow-sm border border-gray-200 hover:shadow-md transition-all duration-300 mb-4 overflow-hidden\">\r\n                <div class=\"p-6\">\r\n                    <div class=\"flex gap-6\">\r\n                        <!-- Imagen -->\r\n                        <div class=\"flex-shrink-0 flex justify-center items-center\">\r\n                            <img src=\"/uploads/${propiedad.imagen}\" alt=\"Casa\" class=\"w-48 h-48 rounded-lg object-cover shadow-sm\">\r\n                        </div>\r\n                        \r\n                        <!-- Contenido principal -->\r\n                        <div class=\"flex-1 min-w-0\">\r\n                            <!-- Header con título y precio -->\r\n                            <div class=\"flex justify-between items-start mb-3\">\r\n                                <div class=\"flex-1\">\r\n                                    <h3 class=\"text-xl font-bold text-gray-900 mb-1 truncate\">${propiedad.titulo}</h3>\r\n                                    <p class=\"text-2xl font-bold text-[#F99E00]\">$ ${propiedad.precio.toLocaleString('es-CO')}</p>\r\n                                </div>\r\n                                \r\n                                <!-- Estado de la propiedad -->\r\n                                <div class=\"flex items-center gap-2 ml-4\">\r\n                                    <div class=\"w-3 h-3 rounded-full ${estado === 'Publicado' ? 'bg-green-500' : 'bg-gray-400'}\"></div>\r\n                                    <span class=\"text-sm font-medium ${estado === 'Publicado' ? 'text-green-600' : 'text-gray-500'}\">${estado === 'Publicado' ? 'Publicado' : 'No Publicado'}</span>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <!-- Información de ubicación -->\r\n                            <div class=\"flex items-center gap-4 mb-3\">\r\n                                <div class=\"flex items-center gap-2 text-gray-600\">\r\n                                    <i class=\"fas fa-map-marker-alt text-[#F99E00]\"></i>\r\n                                    <span class=\"text-sm\">${propiedad.categoriaRelacion.nombre}</span>\r\n                                </div>\r\n                                <div class=\"flex items-center gap-2 text-gray-600\">\r\n                                    <i class=\"fas fa-location-arrow text-[#F99E00]\"></i>\r\n                                    <span class=\"text-sm\">${propiedad.calle}</span>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <!-- Características de la propiedad -->\r\n                            <div class=\"flex items-center gap-6 mb-4\">\r\n                                <div class=\"flex items-center gap-2 text-gray-600\">\r\n                                    <i class=\"fas fa-bed text-[#F99E00]\"></i>\r\n                                    <span class=\"text-sm font-medium\">${propiedad.habitaciones} habitaciones</span>\r\n                                </div>\r\n                                <div class=\"flex items-center gap-2 text-gray-600\">\r\n                                    <i class=\"fas fa-bath text-[#F99E00]\"></i>\r\n                                    <span class=\"text-sm font-medium\">${propiedad.wc} baños</span>\r\n                                </div>\r\n                                <div class=\"flex items-center gap-2 text-gray-600\">\r\n                                    <i class=\"fas fa-car text-[#F99E00]\"></i>\r\n                                    <span class=\"text-sm font-medium\">${propiedad.estacionamiento} estacionamientos</span>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <!-- Botones de acción -->\r\n                            <div class=\"flex items-center gap-3 pt-3 border-t border-gray-100\">\r\n                                <!-- Cambiar estado -->\r\n                                <button \r\n                                    class=\"cambiar-estado flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${estado === 'Publicado' ? 'bg-green-100 text-green-700 hover:bg-green-200' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'} cursor-pointer\"\r\n                                    data-propiedad-id=\"${propiedad.id}\"\r\n                                >\r\n                                    <img src=\"${estado === 'Publicado' ? '/img/activarPropiedad.png' : '/img/desactivarPropiedad.png'}\" \r\n                                         alt=\"${estado === 'Publicado' ? 'Activar' : 'Desactivar'}\" \r\n                                         class=\"w-12 h-12\">\r\n                                    ${estado === 'Publicado' ? 'Desactivar' : 'Activar'}\r\n                                </button>\r\n                                \r\n                                <!-- Editar -->\r\n                                <a href=\"/propiedades/editar/${propiedad.id}\" \r\n                                   class=\"flex items-center gap-2 px-4 py-2 bg-[#F99E00] text-white rounded-lg text-sm font-medium hover:bg-[#F97101] transition-all duration-200 cursor-pointer\">\r\n                                    <img src=\"/img/editarPropiedad.png\" alt=\"Editar\" class=\"w-12 h-12\">\r\n                                    Editar\r\n                                </a>\r\n                                \r\n                                <!-- Eliminar -->\r\n                                <button type=\"button\" \r\n                                        class=\"eliminar-propiedad flex items-center gap-2 px-4 py-2 bg-red-100 text-red-700 rounded-lg text-sm font-medium hover:bg-red-200 transition-all duration-200 cursor-pointer\" \r\n                                        data-propiedad-id=\"${propiedad.id}\"\r\n                                        data-propiedad-titulo=\"${propiedad.titulo}\">\r\n                                    <img src=\"/img/eliminarPropiedad.png\" alt=\"Eliminar\" class=\"w-12 h-12\">\r\n                                    Eliminar\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        `;\r\n    }\r\n\r\n    // Función para mostrar modal de eliminación\r\n    function mostrarModalEliminarPropiedad(propiedadId, propiedadTitulo) {\r\n        const modalEliminar = document.getElementById('modalEliminar');\r\n        if (!modalEliminar) return;\r\n\r\n        modalEliminar.classList.add('flex');\r\n        modalEliminar.classList.remove('hidden');\r\n\r\n        // Mostrar el nombre de la propiedad\r\n        const nombrePropiedad = document.getElementById('nombrePropiedad');\r\n        if (nombrePropiedad) {\r\n            nombrePropiedad.textContent = propiedadTitulo;\r\n        }\r\n\r\n        // Actualizar la acción del formulario\r\n        const formEliminar = document.getElementById('formEliminar');\r\n        if (formEliminar) {\r\n            formEliminar.action = `/propiedades/eliminar/${propiedadId}`;\r\n        }\r\n\r\n        // Mostrar el modal con animación\r\n        setTimeout(() => {\r\n            const modalContent = modalEliminar.querySelector('.bg-white');\r\n            if (modalContent) {\r\n                modalContent.classList.remove('scale-95', 'opacity-0');\r\n                modalContent.classList.add('scale-100', 'opacity-100');\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    // Función para cerrar modal de eliminación\r\n    function cerrarModalEliminarPropiedad() {\r\n        const modalEliminar = document.getElementById('modalEliminar');\r\n        if (!modalEliminar) return;\r\n\r\n        const modalContent = modalEliminar.querySelector('.bg-white');\r\n        if (modalContent) {\r\n            modalContent.classList.remove('scale-100', 'opacity-100');\r\n            modalContent.classList.add('scale-95', 'opacity-0');\r\n        }\r\n\r\n        setTimeout(() => {\r\n            modalEliminar.classList.add('hidden');\r\n            modalEliminar.classList.remove('flex');\r\n        }, 300);\r\n    }\r\n\r\n    // Función para mostrar las propiedades en la página\r\n    function mostrarPropiedades(propiedades) {\r\n        if (propiedades.length === 0) {\r\n            contenedor.innerHTML = '<li class=\"p-8 text-center text-gray-500\"><i class=\"fas fa-search text-4xl mb-4 text-gray-300\"></i><p>No hay propiedades que coincidan con los filtros</p></li>'\r\n            contadorPropiedades.textContent = '0';\r\n            return\r\n        }\r\n\r\n        // Crear el HTML de todas las propiedades\r\n        const html = propiedades.map(propiedad => crearPropiedadHTML(propiedad)).join('')\r\n        contenedor.innerHTML = html\r\n        contadorPropiedades.textContent = propiedades.length;\r\n\r\n        // Agregar eventos a los botones de estado\r\n        document.querySelectorAll('.cambiar-estado').forEach(boton => {\r\n            boton.addEventListener('click', async () => {\r\n                const id = boton.dataset.propiedadId\r\n                const token = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\r\n\r\n                try {\r\n                    // Enviar petición para cambiar el estado\r\n                    const respuesta = await fetch(`/propiedades/estado/${id}`, {\r\n                        method: 'PUT',\r\n                        headers: { 'CSRF-Token': token }\r\n                    })\r\n                    const resultado = await respuesta.json()\r\n\r\n                    // Actualizar el botón si la petición fue exitosa\r\n                    if (resultado.resultado) {\r\n                        if (boton.classList.contains('bg-green-100')) {\r\n                            boton.classList.remove('bg-green-100', 'text-green-800')\r\n                            boton.classList.add('bg-yellow-100', 'text-red-800')\r\n                            boton.textContent = 'No Publicado'\r\n                        } else {\r\n                            boton.classList.remove('bg-yellow-100', 'text-red-800')\r\n                            boton.classList.add('bg-green-100', 'text-green-800')\r\n                            boton.textContent = 'Publicado'\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.log('Error al cambiar estado:', error)\r\n                }\r\n            })\r\n        })\r\n\r\n        // Agregar eventos a los botones de eliminar\r\n        document.querySelectorAll('.eliminar-propiedad').forEach(boton => {\r\n            boton.addEventListener('click', () => {\r\n                const propiedadId = boton.dataset.propiedadId;\r\n                const propiedadTitulo = boton.dataset.propiedadTitulo;\r\n                mostrarModalEliminarPropiedad(propiedadId, propiedadTitulo);\r\n            });\r\n        })\r\n    }\r\n\r\n    // Función para obtener las propiedades filtradas\r\n    async function obtenerPropiedadesFiltradas() {\r\n        try {\r\n            // Construir los parámetros de búsqueda\r\n            const params = new URLSearchParams()\r\n\r\n            // Agregar todos los filtros\r\n            if (selectEstado.value !== '') {\r\n                params.append('estado', selectEstado.value)\r\n            }\r\n            if (selectCategoria.value !== '') {\r\n                params.append('categoria', selectCategoria.value)\r\n            }\r\n            if (selectHabitaciones.value !== '') {\r\n                params.append('habitaciones', selectHabitaciones.value)\r\n            }\r\n            if (selectWc.value !== '') {\r\n                params.append('wc', selectWc.value)\r\n            }\r\n            if (selectEstacionamiento.value !== '') {\r\n                params.append('estacionamiento', selectEstacionamiento.value)\r\n            }\r\n            if (buscarInput.value.trim() !== '') {\r\n                params.append('buscar', buscarInput.value.trim())\r\n            }\r\n            \r\n            const url = `/propiedades/api/propiedades/filtradas?${params.toString()}`\r\n            console.log('URL de búsqueda:', url)\r\n\r\n            // Obtener las propiedades\r\n            const respuesta = await fetch(url)\r\n            const propiedades = await respuesta.json()\r\n            console.log('Propiedades recibidas:', propiedades)\r\n            mostrarPropiedades(propiedades)\r\n        } catch (error) {\r\n            console.log('Error al obtener propiedades:', error)\r\n        }\r\n    }\r\n\r\n    // Función para limpiar filtros\r\n    function limpiarTodosLosFiltros() {\r\n        selectEstado.value = ''\r\n        selectCategoria.value = ''\r\n        selectHabitaciones.value = ''\r\n        selectWc.value = ''\r\n        selectEstacionamiento.value = ''\r\n        buscarInput.value = ''\r\n        obtenerPropiedadesFiltradas()\r\n    }\r\n\r\n    // Agregar eventos a los selectores\r\n    selectEstado.addEventListener('change', obtenerPropiedadesFiltradas)\r\n    selectCategoria.addEventListener('change', obtenerPropiedadesFiltradas)\r\n    selectHabitaciones.addEventListener('change', obtenerPropiedadesFiltradas)\r\n    selectWc.addEventListener('change', obtenerPropiedadesFiltradas)\r\n    selectEstacionamiento.addEventListener('change', obtenerPropiedadesFiltradas)\r\n    buscarInput.addEventListener('input', obtenerPropiedadesFiltradas)\r\n    limpiarFiltros.addEventListener('click', limpiarTodosLosFiltros)\r\n\r\n    // Cargar propiedades al inicio\r\n    obtenerPropiedadesFiltradas()\r\n\r\n    // Hacer las funciones globales\r\n    window.mostrarModalEliminarPropiedad = mostrarModalEliminarPropiedad;\r\n    window.cerrarModalEliminarPropiedad = cerrarModalEliminarPropiedad;\r\n})\r\n\n\n//# sourceURL=webpack://bienes_raices_mvc/./src/js/filtrarPropiedades.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/filtrarPropiedades.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;