/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/agregarVentanaModal.js":
/*!************************************!*\
  !*** ./src/agregarVentanaModal.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n//- Recoger el valor del mensaje\r\nconst valorMensaje = document.getElementById('valorMensaje');\r\nif (valorMensaje && valorMensaje.dataset.show === 'true') {\r\n    //- Mostrar el modal\r\n    const modalMensaje = document.getElementById('modalMensaje');\r\n    if (modalMensaje) {\r\n        modalMensaje.classList.remove('hidden');\r\n        const contenedorSpinner = document.querySelector('#contenedorSpinner');\r\n        \r\n        //- Ocultar el mensaje principal inicialmente\r\n        const mensajePrincipal = document.getElementById('mensajePrincipal');\r\n        if (mensajePrincipal) {\r\n            mensajePrincipal.classList.add('hidden');\r\n        }\r\n        \r\n        //- Animacion de entrada\r\n        setTimeout(() => {\r\n            const modalContent = modalMensaje.querySelector('.bg-white');\r\n            if (modalContent) {\r\n                modalContent.classList.remove('scale-95', 'opacity-0');\r\n                modalContent.classList.add('scale-100', 'opacity-100');\r\n            }\r\n        }, 500);\r\n        \r\n        mostrarSpinner();\r\n\r\n        //- Agregar event listeners después de que el modal existe\r\n        agregarEventListeners();\r\n\r\n        function mostrarSpinner() {\r\n            if (!contenedorSpinner) return;\r\n            \r\n            //- Deshabilitar el botón inicialmente\r\n            const btnAceptar = document.getElementById('btnAceptar');\r\n            if (btnAceptar) {\r\n                btnAceptar.disabled = true;\r\n                btnAceptar.classList.remove('bg-gray-200', 'text-gray-700', 'hover:bg-gray-300', 'cursor-pointer');\r\n                btnAceptar.classList.add('bg-gray-300', 'text-gray-500', 'cursor-not-allowed', 'opacity-50');\r\n            }\r\n            \r\n            //- Mensajes de carga\r\n            const mensajesCarga = [\r\n                \"Procesando...\",\r\n                \"Guardando información...\",\r\n                \"Finalizando...\",\r\n                \"¡Completado!\"\r\n            ];\r\n            \r\n            let mensajeIndex = 0;\r\n            const mensajeCarga = document.getElementById('mensajeCarga');\r\n            \r\n            //- Función para cambiar mensajes\r\n            function cambiarMensaje() {\r\n                if (mensajeCarga && mensajeIndex < mensajesCarga.length) {\r\n                    mensajeCarga.textContent = mensajesCarga[mensajeIndex];\r\n                    mensajeIndex++;\r\n                }\r\n            }\r\n            \r\n            //- Cambiar mensaje inicial\r\n            cambiarMensaje();\r\n            \r\n            //Crear un div con la clase sk-chase\r\n            const spinner = document.createElement('DIV');\r\n            spinner.classList.add('sk-chase');\r\n            //- Crear 4 divs con la clase sk-chase-dot\r\n            for (let i = 0; i < 4; i++) {\r\n                const dot = document.createElement('DIV');\r\n                dot.classList.add('sk-chase-dot');\r\n                spinner.appendChild(dot);\r\n            }\r\n            //- Agregar el spinner al contenedor\r\n            contenedorSpinner.appendChild(spinner);\r\n            \r\n            //- Cambiar mensajes cada segundo\r\n            const intervalMensajes = setInterval(() => {\r\n                cambiarMensaje();\r\n            }, 1000);\r\n            \r\n            const contenedorIconoCheck = document.getElementById('contenedorIconoCheck');\r\n            setTimeout(() => {\r\n                //- Detener el intervalo de mensajes\r\n                clearInterval(intervalMensajes);\r\n                \r\n                //- Eliminar el spinner\r\n                if (spinner && spinner.parentNode) {\r\n                    spinner.remove();\r\n                }\r\n                if (contenedorIconoCheck) {\r\n                    contenedorIconoCheck.classList.remove('hidden');\r\n                    contenedorIconoCheck.classList.add('flex');\r\n                }\r\n                \r\n                //- Mostrar el mensaje principal\r\n                if (mensajePrincipal) {\r\n                    mensajePrincipal.classList.remove('hidden');\r\n                }\r\n                \r\n                //- Mostrar mensaje final\r\n                if (mensajeCarga) {\r\n                    mensajeCarga.textContent = \"¡Listo! Puedes continuar.\";\r\n                    mensajeCarga.classList.remove('text-gray-600');\r\n                    mensajeCarga.classList.add('text-green-600', 'font-medium');\r\n                }\r\n                \r\n                //- Habilitar el botón cuando aparezca el check\r\n                if (btnAceptar) {\r\n                    btnAceptar.disabled = false;\r\n                    btnAceptar.classList.remove('bg-gray-300', 'text-gray-500', 'cursor-not-allowed', 'opacity-50');\r\n                    btnAceptar.classList.add('bg-gray-200', 'text-gray-700', 'hover:bg-gray-300', 'cursor-pointer');\r\n                }\r\n            }, 4000);\r\n        }\r\n\r\n        function limpiarContenedor() {\r\n            if (contenedorSpinner) {\r\n                while (contenedorSpinner.firstChild) {\r\n                    contenedorSpinner.removeChild(contenedorSpinner.firstChild);\r\n                }\r\n            }\r\n        }\r\n\r\n        function agregarEventListeners() {\r\n            //- Cerrar cuando se haga click fuera\r\n            modalMensaje.addEventListener('click', function (e) {\r\n                if (e.target === this) cerrarModalMensaje();\r\n            });\r\n\r\n            //- Cerrar con Escape\r\n            const handleEscape = function (e) {\r\n                if (e.key === 'Escape') cerrarModalMensaje();\r\n            };\r\n            document.addEventListener('keydown', handleEscape);\r\n\r\n            //- Limpiar event listener cuando se cierre el modal\r\n            window.cerrarModalMensaje = function() {\r\n                document.removeEventListener('keydown', handleEscape);\r\n                cerrarModalMensaje();\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n//- Cerrar el modal cuando se haga click en el boton de aceptar\r\nfunction cerrarModalMensaje() {\r\n    //- Encontrar el modal\r\n    const modal = document.getElementById('modalMensaje');\r\n    if (!modal) return;\r\n\r\n    //- Animacion de salida\r\n    const modalContent = modal.querySelector('.bg-white');\r\n    if (modalContent) {\r\n        modalContent.classList.remove('scale-100', 'opacity-100');\r\n        modalContent.classList.add('scale-95', 'opacity-0');\r\n    }\r\n\r\n    setTimeout(() => {\r\n        modal.classList.add('hidden');\r\n        //- Limpiar el contenedor del spinner\r\n        const contenedorSpinner = document.getElementById('contenedorSpinner');\r\n        if (contenedorSpinner) {\r\n            while (contenedorSpinner.firstChild) {\r\n                contenedorSpinner.removeChild(contenedorSpinner.firstChild);\r\n            }\r\n        }\r\n        //- Ocultar el icono de check\r\n        const contenedorIconoCheck = document.getElementById('contenedorIconoCheck');\r\n        if (contenedorIconoCheck) {\r\n            contenedorIconoCheck.classList.add('hidden');\r\n            contenedorIconoCheck.classList.remove('flex');\r\n        }\r\n        \r\n        //- Ocultar el mensaje principal\r\n        const mensajePrincipal = document.getElementById('mensajePrincipal');\r\n        if (mensajePrincipal) {\r\n            mensajePrincipal.classList.add('hidden');\r\n        }\r\n        \r\n        //- Resetear el mensaje de carga\r\n        const mensajeCarga = document.getElementById('mensajeCarga');\r\n        if (mensajeCarga) {\r\n            mensajeCarga.textContent = \"Procesando...\";\r\n            mensajeCarga.classList.remove('text-green-600', 'font-medium');\r\n            mensajeCarga.classList.add('text-gray-600');\r\n        }\r\n        \r\n        //- Resetear el botón a su estado inicial\r\n        const btnAceptar = document.getElementById('btnAceptar');\r\n        if (btnAceptar) {\r\n            btnAceptar.disabled = true;\r\n            btnAceptar.classList.remove('bg-gray-200', 'text-gray-700', 'hover:bg-gray-300', 'cursor-pointer');\r\n            btnAceptar.classList.add('bg-gray-300', 'text-gray-500', 'cursor-not-allowed', 'opacity-50');\r\n        }\r\n    }, 300);\r\n}\r\n\r\n//- Hacer la función global para que el botón pueda acceder a ella\r\nwindow.cerrarModalMensajeEditar = cerrarModalMensaje;\r\n\r\n\n\n//# sourceURL=webpack://bienes_raices_mvc/./src/agregarVentanaModal.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/agregarVentanaModal.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;