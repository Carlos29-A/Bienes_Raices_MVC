/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/audio.js":
/*!*************************!*\
  !*** ./src/js/audio.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Configuración de comandos de voz\r\nconst COMANDOS = {\r\n    VENDEDOR: {\r\n        PUBLICAR_PROPIEDAD: {\r\n            ruta: '/propiedades/crearPropiedad',\r\n            variantes: ['publicar propiedad', 'crear propiedad', 'nueva propiedad', 'agregar propiedad', 'subir propiedad']\r\n        },\r\n        VER_PROPIEDADES: {\r\n            ruta: '/propiedades/mis-propiedades',\r\n            variantes: ['ver propiedades', 'mis propiedades', 'mostrar propiedades', 'listar propiedades', 'propiedades publicadas']\r\n        },\r\n        MENSAJES: {\r\n            ruta: '/mensajes/obtener/vendedor',\r\n            variantes: ['mensajes vendedor', 'ver mensajes vendedor', 'bandeja de entrada vendedor', 'mensajes de vendedor']\r\n        },\r\n        PERFIL: {\r\n            ruta: '/auth/editar-perfil',\r\n            variantes: ['perfil vendedor', 'ver perfil vendedor', 'mi perfil vendedor', 'editar perfil vendedor']\r\n        },\r\n        PANEL: {\r\n            ruta: '/auth/vendedor/panel',\r\n            variantes: ['panel de inicio vendedor', 'inicio vendedor', 'dashboard vendedor', 'panel vendedor', 'página principal vendedor']\r\n        }\r\n    },\r\n    COMPRADOR: {\r\n        PANEL: {\r\n            ruta: '/auth/comprador/panel',\r\n            variantes: ['panel comprador', 'inicio comprador', 'dashboard comprador', 'página principal comprador']\r\n        },\r\n        MENSAJES: {\r\n            ruta: '/mensajes/obtener/comprador',\r\n            variantes: ['mensajes comprador', 'ver mensajes comprador', 'bandeja de entrada comprador', 'mensajes de comprador', 'mis mensajes comprador', 'ver mis mensajes']\r\n        },\r\n        PERFIL: {\r\n            ruta: '/auth/editar-perfil',\r\n            variantes: ['perfil comprador', 'ver perfil comprador', 'mi perfil comprador', 'editar perfil comprador']\r\n        },\r\n        FAVORITOS: {\r\n            ruta: '/favoritos/propiedades-favoritas',\r\n            variantes: ['favoritos', 'mis favoritos', 'propiedades favoritas', 'ver favoritos']\r\n        },\r\n        BUSCAR: {\r\n            ruta: '/propiedades/buscar',\r\n            variantes: ['buscar', 'buscar propiedades', 'búsqueda', 'encontrar propiedad', 'búsqueda de propiedades']\r\n        },\r\n        CATEGORIAS: {\r\n            CASAS: {\r\n                ruta: '/propiedades/categorias/1',\r\n                variantes: ['ver casas', 'mostrar casas', 'casas disponibles', 'categoría casas']\r\n            },\r\n            DEPARTAMENTOS: {\r\n                ruta: '/propiedades/categorias/2',\r\n                variantes: ['ver departamentos', 'mostrar departamentos', 'departamentos disponibles', 'categoría departamentos']\r\n            },\r\n            BODEGAS: {\r\n                ruta: '/propiedades/categorias/3',\r\n                variantes: ['ver bodegas', 'mostrar bodegas', 'bodegas disponibles', 'categoría bodegas']\r\n            },\r\n            TERRENOS: {\r\n                ruta: '/propiedades/categorias/4',\r\n                variantes: ['ver terrenos', 'mostrar terrenos', 'terrenos disponibles', 'categoría terrenos']\r\n            },\r\n            CABANAS: {\r\n                ruta: '/propiedades/categorias/5',\r\n                variantes: ['ver cabañas', 'mostrar cabañas', 'cabañas disponibles', 'categoría cabañas']\r\n            }\r\n        }\r\n    },\r\n    PUBLICO: {\r\n        INICIO: {\r\n            ruta: '/',\r\n            variantes: ['inicio', 'página principal', 'home', 'página de inicio', 'volver al inicio']\r\n        },\r\n        NOSOTROS: {\r\n            ruta: '/nosotros',\r\n            variantes: ['nosotros', 'sobre nosotros', 'quiénes somos', 'acerca de', 'información']\r\n        },\r\n        CONTACTO: {\r\n            ruta: '/contacto',\r\n            variantes: ['contacto', 'contactar', 'información de contacto', 'página de contacto']\r\n        },\r\n        LOGIN: {\r\n            ruta: '/auth/login',\r\n            variantes: ['iniciar sesión', 'login', 'entrar', 'acceder', 'ingresar']\r\n        },\r\n        REGISTRO: {\r\n            ruta: '/auth/registro',\r\n            variantes: ['registrarse', 'registro', 'crear cuenta', 'nueva cuenta', 'registrar usuario']\r\n        },\r\n        RECUPERAR: {\r\n            ruta: '/auth/olvide-password',\r\n            variantes: ['olvidé mi contraseña', 'recuperar contraseña', 'restablecer contraseña', 'cambiar contraseña']\r\n        }\r\n    }\r\n};\r\n\r\n// Elemento para mostrar feedback visual\r\nconst crearFeedbackElement = () => {\r\n    const feedback = document.createElement('div');\r\n    feedback.id = 'voiceFeedback';\r\n    feedback.style.cssText = `\r\n        position: fixed;\r\n        top: 20px;\r\n        right: 20px;\r\n        padding: 15px 25px;\r\n        background: rgba(255, 104, 25, 0.9);\r\n        color: white;\r\n        border-radius: 8px;\r\n        font-size: 16px;\r\n        z-index: 1000;\r\n        display: none;\r\n        transition: all 0.3s ease;\r\n    `;\r\n    document.body.appendChild(feedback);\r\n    return feedback;\r\n};\r\n\r\n// Mostrar feedback\r\nconst mostrarFeedback = (mensaje, tipo = 'info') => {\r\n    const feedback = document.getElementById('voiceFeedback') || crearFeedbackElement();\r\n    feedback.textContent = mensaje;\r\n    feedback.style.display = 'block';\r\n    feedback.style.backgroundColor = tipo === 'error' ? 'rgba(220, 38, 38, 0.9)' : 'rgba(255, 104, 25, 0.9)';\r\n\r\n    setTimeout(() => {\r\n        feedback.style.display = 'none';\r\n    }, 3000);\r\n};\r\n\r\n// Encontrar comando por texto\r\nconst encontrarComando = (texto) => {\r\n    texto = texto.toLowerCase().trim();\r\n    \r\n    // Primero buscar comandos específicos (con más palabras)\r\n    let mejorCoincidencia = {\r\n        ruta: null,\r\n        palabras: 0\r\n    };\r\n\r\n    // Recorrer todos los grupos de comandos\r\n    for (const grupo in COMANDOS) {\r\n        for (const comando in COMANDOS[grupo]) {\r\n            if (typeof COMANDOS[grupo][comando] === 'object' && COMANDOS[grupo][comando].variantes) {\r\n                // Verificar comando principal\r\n                COMANDOS[grupo][comando].variantes.forEach(variante => {\r\n                    if (texto.includes(variante.toLowerCase())) {\r\n                        const palabrasEnVariante = variante.split(' ').length;\r\n                        if (palabrasEnVariante > mejorCoincidencia.palabras) {\r\n                            mejorCoincidencia = {\r\n                                ruta: COMANDOS[grupo][comando].ruta,\r\n                                palabras: palabrasEnVariante\r\n                            };\r\n                        }\r\n                    }\r\n                });\r\n            } else if (typeof COMANDOS[grupo][comando] === 'object') {\r\n                // Buscar en subcategorías\r\n                for (const subcomando in COMANDOS[grupo][comando]) {\r\n                    COMANDOS[grupo][comando][subcomando].variantes.forEach(variante => {\r\n                        if (texto.includes(variante.toLowerCase())) {\r\n                            const palabrasEnVariante = variante.split(' ').length;\r\n                            if (palabrasEnVariante > mejorCoincidencia.palabras) {\r\n                                mejorCoincidencia = {\r\n                                    ruta: COMANDOS[grupo][comando][subcomando].ruta,\r\n                                    palabras: palabrasEnVariante\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return mejorCoincidencia.ruta;\r\n};\r\n\r\n// Inicializar reconocimiento de voz\r\nconst btnaudio = document.querySelector('#btnAudio');\r\nbtnaudio?.addEventListener('click', ejecutarAudio);\r\n\r\nfunction ejecutarAudio() {\r\n    const SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n        mostrarFeedback('Tu navegador no soporta el reconocimiento de voz', 'error');\r\n        return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = 'es-ES';\r\n    recognition.continuous = false;\r\n    recognition.interimResults = false;\r\n\r\n    recognition.start();\r\n\r\n    recognition.onstart = () => {\r\n        mostrarFeedback('Escuchando...');\r\n    };\r\n\r\n    recognition.onspeechend = () => {\r\n        mostrarFeedback('Procesando...');\r\n        recognition.stop();\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n        let mensaje = 'Error en el reconocimiento de voz';\r\n        if (event.error === 'no-speech') {\r\n            mensaje = 'No se detectó ninguna voz';\r\n        } else if (event.error === 'audio-capture') {\r\n            mensaje = 'No se detectó micrófono';\r\n        } else if (event.error === 'not-allowed') {\r\n            mensaje = 'Permiso de micrófono denegado';\r\n        }\r\n        mostrarFeedback(mensaje, 'error');\r\n    };\r\n\r\n    recognition.onresult = (event) => {\r\n        const texto = event.results[0][0].transcript;\r\n        console.log('Texto reconocido:', texto);\r\n        \r\n        const ruta = encontrarComando(texto);\r\n        if (ruta) {\r\n            mostrarFeedback('Redirigiendo...');\r\n            window.location.href = ruta;\r\n        } else {\r\n            mostrarFeedback('Comando no reconocido', 'error');\r\n        }\r\n    };\r\n}\n\n//# sourceURL=webpack://bienes_raices_mvc/./src/js/audio.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/audio.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;